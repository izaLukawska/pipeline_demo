name: CI

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Build & test
        run: mvn clean verify jacoco:report
      - name: Check line coverage
        run: |
          MISSED=$(awk -F'"' '/counter type="LINE"/{for(i=1;i<=NF;i++){if($i~/missed=/){sum+=$(i+1)}}} END{print sum}' target/site/jacoco/jacoco.xml)
          COVERED=$(awk -F'"' '/counter type="LINE"/{for(i=1;i<=NF;i++){if($i~/covered=/){sum+=$(i+1)}}} END{print sum}' target/site/jacoco/jacoco.xml)
          TOTAL=$((MISSED + COVERED))
          if [ "$TOTAL" -eq 0 ]; then
            echo "Brak danych o pokryciu linii! Sprawdź czy plik jacoco.xml istnieje."
            exit 1
          fi
          COVERAGE=$(echo "scale=2; ($COVERED / $TOTAL) * 100" | bc)
          echo "Line coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 80.0" | bc -l) )); then
            echo "Line coverage too low!"
            exit 1
          fi
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: target/site/jacoco/jacoco.xml

##Codecov to zewnętrzny serwis do analizy pokrycia testami.
#Pozwala wizualizować raporty pokrycia kodu, generować odznaki do README,
##komentować PR z informacją o pokryciu oraz śledzić zmiany pokrycia w repozytorium.
#Nie jest wymagany do działania testów — używasz go, jeśli chcesz mieć publiczny, czytelny raport pokrycia w GitHub.